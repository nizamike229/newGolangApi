version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: golanguser
      POSTGRES_PASSWORD: golangtest1889
      POSTGRES_DB: maindb
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U golanguser -d maindb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  init-uuid:
    image: postgres:13
    entrypoint: ["psql", "-h", "db", "-U", "golanguser", "-d", "maindb", "-c", "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"]
    environment:
      PGPASSWORD: golangtest1889
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_DSN: "host=db user=golanguser password=golangtest1889 dbname=maindb port=5432 sslmode=disable"
    env_file:
      - ./configs/main.env
    depends_on:
      init-uuid:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge